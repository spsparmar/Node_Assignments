swagger: "2.0"
info:
  description: "Starwars API."
  version: ""
  title: "SWAPI"
host: "swapi.co"
basePath: "/api"
tags:
- name: "Vehicles"
  description: "Everything about Vehicles"
  externalDocs:
    description: "Find out more"
    url: "http://swapi.co/documentation#vehicles"
- name: "People"
  description: "Everything about People"
  externalDocs:
    description: "Find out more"
    url: "http://swapi.co/documentation#people"
- name: "Starships"
  description: "Everything about Starships"
  externalDocs:
    description: "Find out more"
    url: "http://swapi.co/documentation#starships"
- name: "Species"
  description: "Everything about Species"
  externalDocs:
    description: "Find out more"
    url: "http://swapi.co/documentation#species"
schemes:
- "http"
paths:
  /Vehicle/:
    get:
      tags:
      - "Vehicles"
      summary: "Find list of vehicles"
      description: "Returns a List of vehicle"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      - name: "model"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/Vehicles"
  /vehicles/{id}/:
    get:
      tags:
      - "Vehicles"
      summary: "Find Vehicle by ID"
      description: "Returns a single vehicle"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Vehicle to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vehicles"
  /vehicle/schema/:
    get:
      tags:
      - "Vehicles"
      summary: "Find Vehicle Schema"
      description: "Returns a json schema"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "http://swapi.co/api/starships/schema"
  /people/:
    get:
      tags:
      - "People"
      summary: "Find list of People"
      description: "get all the people resources"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/People"
  /people/{id}/:
    get:
      tags:
      - "People"
      summary: "Find people by ID"
      description: "get a specific people resource"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of people to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/People"
  /people/schema/:
    get:
      tags:
      - "People"
      summary: "Return Schema"
      description: "Returns a json Schema"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "http://swapi.co/api/people/schema"
  /starships/:
    get:
      tags:
      - "Starships"
      summary: "Find list of starships"
      description: "Returns a List of starship"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      - name: "model"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Starships"
  /starship/{id}/:
    get:
      tags:
      - "Starships"
      summary: "Find starship by ID"
      description: "Returns a single starship"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of starship to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Starships"
  /starship/schema/:
    get:
      tags:
      - "Starships"
      summary: "Find starship by ID"
      description: "Returns a json schema"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "http://swapi.co/api/starships/schema"
  /species/:
    get:
      tags:
      - "Species"
      summary: "Find list of species"
      description: "get all the species resources"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Species"
  /species/{id}/:
    get:
      tags:
      - "Species"
      summary: "Find speciese by ID"
      description: "get a specific species resource"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of species to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Species"
  /species/schema/:
    get:
      tags:
      - "Species"
      summary: "Return Schema"
      description: "Returns a json Schema"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "http://swapi.co/api/starships/schema"
definitions:
  Vehicles:
    type: "object"
    properties:
      model:
        type: "string"
        example: "All-Terrain Attack Transport"
      vehicle_class:
        type: "string"
        example: "wheeled"
      name:
        type: "string"
        example: "speeder bike"
      manufacturer:
        type: "string"
        example: "Corellia Mining Corporation"
      length:
        type: "string"
        example: "36.8"
      cost_in_credits:
        type: "string"
        example: "15000"
      max_atmosphering_speed:
        type: "string"
        example: "30"
      cargo_capacity:
        type: "string"
        example: "5000"
      consumables:
        type: "string"
        example: "2 months"
      films:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/films/1/"]
      pilots:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/people/1/", "http://swapi.co/api/people/5/"]
      url:
        type: "string"
        example: "http://swapi.co/api/vehicles/4/"
      created:
        type: "string"
        example: "155300322348"
      edited:
        type: "string"
        example: "155300322348"
  People:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Shiv"
      birth_year:
        type: "string"
        example: "19 BBY"
      eye_color:
        type: "string"
        example: "Blue"
      gender:
        type: "string"
        enum:
         - "Male"
         - "Female"
         - "unknown"
         - "n/a"
      hair_color:
        type: "string"
        example: "Black"
      height:
        type: "string"
        description: "In centimeters"
        example: "172"
      mass:
        type: "string"
        description: "In kilograms"
        example: "77"
      skin_color:
        type: "string"
        example: "Fair"
      homeworld:
        type: "string"
        example: "http://swapi.co/api/planets/1/"
      films:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/planets/1/"]
      species:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/species/1/"]
      starships:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/starships/12/"]
      vehicles:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/vehicles/14/"]
      url:
        type: "string"
      created:
        type: "string"
        example: "155300322348"
      edited:
        type: "string"
        example: "155300322348"
  Starships:
    type: "object"
    properties:
      model:
        type: "string"
        example: "T-65 X-wing"
      starship_class:
        type: "string"
        example: "Starfighter"
      name:
        type: "string"
        example: "Death Star"
      manufacturer:
        type: "string"
        example: "Imperial Department of Military Research, Sienar Fleet Systems"
      length:
        type: "string"
        description: "In metres"
        example: "120000"
      cost_in_credits:
        type: "string"
        example: "10000000000"
      crew:
        type: "string"
        example: "2000"
      passengers:
        type: "string"
        example: "8373"
      max_atmosphering_speed:
        type: "string"
        example: "n/a"
      hyperdrive_rating:
        type: "string"
        example: "4.2"
      MGLT:
        type: "string"
        example: "10 MGLT"
      cargo_capacity:
        type: "string"
        example: "1000000"
      consumables:
        type: "string"
        example: "3 Years"
      films:
        type: "array"
        items:
         type: "string"
        example: ["http://swapi.co/api/films/1/"]
      pilots:
        type: "array"
        items:
         type: "string"
        example: :"[]"
      url:
        type: "string"
        example: "http://swapi.co/api/starships/9/"
      created:
        type: "string"
        example: "155300322348"
      edited:
        type: "string"
        example: "155300322348"
  Species:
    type: "object"
    properties:
      name:
        type: "string"
        example: "mammal"
      classification:
        type: "string"
        example: "senitent"
      average_lifespan:
        type: "string"
        example: "400"
      eye_colors:
        type: "string"
        example: "blue, green"
      hair_colors:
        type: "string"
        example: "black, brown"
      skin_colors:
        type: "string"
        example: "gray, fair"
      average_height:
        type: "string"
        description: "In centimetres"
        example: "2.1"
      language:
        type: "string"
        example: "Shyriiwook"
      homeworld:
        type: "string"
        example: "http://swapi.co/api/planets/14/"
      films:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/films/1/"]
      species:
        type: "array"
        items:
          type: "string"
        example: ["http://swapi.co/api/species/1/"]
      url:
        type: "string"
        example: "http://swapi.co/api/species/3/"
      created:
        type: "string"
        example: "155300322348"
      edited:
        type: "string"
        example: "155300322348"
        